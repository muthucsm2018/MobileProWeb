//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MobilePro.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MobileProEntities : DbContext
    {
        public MobileProEntities()
            : base("name=MobileProEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<security_Pages> security_Pages { get; set; }
        public virtual DbSet<security_RolePages> security_RolePages { get; set; }
        public virtual DbSet<security_Roles> security_Roles { get; set; }
        public virtual DbSet<security_UsersInRoles> security_UsersInRoles { get; set; }
        public virtual DbSet<ServiceBill> ServiceBills { get; set; }
        public virtual DbSet<ServiceBill_VeeraSamy> ServiceBill_VeeraSamy { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public virtual DbSet<webpages_Roles> webpages_Roles { get; set; }
        public virtual DbSet<webpages_Membership> webpages_Membership { get; set; }
    
        public virtual int sp_frm_add_upd_Bill(Nullable<long> serviceID, string receiptNo, string customerName, string contactNo, string modelNo, string natureFault, string problemDesc, Nullable<int> statusCode, string techRemark, string passwordType, string password, Nullable<System.DateTime> serviceDate, Nullable<int> brandCode, Nullable<int> colorCode, string iMEINo, Nullable<decimal> netAmount, Nullable<int> userId, string pageName)
        {
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var natureFaultParameter = natureFault != null ?
                new ObjectParameter("NatureFault", natureFault) :
                new ObjectParameter("NatureFault", typeof(string));
    
            var problemDescParameter = problemDesc != null ?
                new ObjectParameter("ProblemDesc", problemDesc) :
                new ObjectParameter("ProblemDesc", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var techRemarkParameter = techRemark != null ?
                new ObjectParameter("TechRemark", techRemark) :
                new ObjectParameter("TechRemark", typeof(string));
    
            var passwordTypeParameter = passwordType != null ?
                new ObjectParameter("PasswordType", passwordType) :
                new ObjectParameter("PasswordType", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var iMEINoParameter = iMEINo != null ?
                new ObjectParameter("IMEINo", iMEINo) :
                new ObjectParameter("IMEINo", typeof(string));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Bill", serviceIDParameter, receiptNoParameter, customerNameParameter, contactNoParameter, modelNoParameter, natureFaultParameter, problemDescParameter, statusCodeParameter, techRemarkParameter, passwordTypeParameter, passwordParameter, serviceDateParameter, brandCodeParameter, colorCodeParameter, iMEINoParameter, netAmountParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Brand(Nullable<int> brandCode, string brandName, string brandDesc, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var brandDescParameter = brandDesc != null ?
                new ObjectParameter("BrandDesc", brandDesc) :
                new ObjectParameter("BrandDesc", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Brand", brandCodeParameter, brandNameParameter, brandDescParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_add_upd_Color(Nullable<int> colorCode, string colorName, Nullable<bool> status, Nullable<int> userId, string pageName)
        {
            var colorCodeParameter = colorCode.HasValue ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(int));
    
            var colorNameParameter = colorName != null ?
                new ObjectParameter("ColorName", colorName) :
                new ObjectParameter("ColorName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_add_upd_Color", colorCodeParameter, colorNameParameter, statusParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual int sp_frm_Dashboard(Nullable<int> userId, Nullable<System.DateTime> createdDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frm_Dashboard", userIdParameter, createdDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Bill_Details_Result> sp_frm_get_Bill_Details(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Bill_Details_Result>("sp_frm_get_Bill_Details", customerIdParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Bills_Result> sp_frm_get_Bills(Nullable<long> serviceID, string receiptNo, Nullable<int> brandCode, string modelNo, Nullable<System.DateTime> serviceDate, Nullable<int> statusCode, Nullable<int> outSourceCode, string customerName, Nullable<int> userId, string pageName, Nullable<int> parmType)
        {
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var outSourceCodeParameter = outSourceCode.HasValue ?
                new ObjectParameter("OutSourceCode", outSourceCode) :
                new ObjectParameter("OutSourceCode", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var parmTypeParameter = parmType.HasValue ?
                new ObjectParameter("ParmType", parmType) :
                new ObjectParameter("ParmType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Bills_Result>("sp_frm_get_Bills", serviceIDParameter, receiptNoParameter, brandCodeParameter, modelNoParameter, serviceDateParameter, statusCodeParameter, outSourceCodeParameter, customerNameParameter, userIdParameter, pageNameParameter, parmTypeParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Bills_Report_Result> sp_frm_get_Bills_Report(Nullable<int> companyID, string receiptNo, Nullable<int> brandCode, string modelNo, Nullable<int> statusCode, Nullable<System.DateTime> transactionFrom, Nullable<System.DateTime> transactionTo, Nullable<int> createdBy, Nullable<int> userId, string pageName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var brandCodeParameter = brandCode.HasValue ?
                new ObjectParameter("BrandCode", brandCode) :
                new ObjectParameter("BrandCode", typeof(int));
    
            var modelNoParameter = modelNo != null ?
                new ObjectParameter("ModelNo", modelNo) :
                new ObjectParameter("ModelNo", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var transactionFromParameter = transactionFrom.HasValue ?
                new ObjectParameter("TransactionFrom", transactionFrom) :
                new ObjectParameter("TransactionFrom", typeof(System.DateTime));
    
            var transactionToParameter = transactionTo.HasValue ?
                new ObjectParameter("TransactionTo", transactionTo) :
                new ObjectParameter("TransactionTo", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Bills_Report_Result>("sp_frm_get_Bills_Report", companyIDParameter, receiptNoParameter, brandCodeParameter, modelNoParameter, statusCodeParameter, transactionFromParameter, transactionToParameter, createdByParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Brands_Result> sp_frm_get_Brands(string brandName, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Brands_Result>("sp_frm_get_Brands", brandNameParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Colors_Result> sp_frm_get_Colors(string colorName, Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var colorNameParameter = colorName != null ?
                new ObjectParameter("ColorName", colorName) :
                new ObjectParameter("ColorName", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Colors_Result>("sp_frm_get_Colors", colorNameParameter, userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Brands_Result> sp_frm_get_parm_Brands(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Brands_Result>("sp_frm_get_parm_Brands", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_parm_Colors_Result> sp_frm_get_parm_Colors(Nullable<int> userId, string pageName, Nullable<int> companyID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_parm_Colors_Result>("sp_frm_get_parm_Colors", userIdParameter, pageNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Parm_Status_Result> sp_frm_get_Parm_Status(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Parm_Status_Result>("sp_frm_get_Parm_Status", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Parm_Users_Result> sp_frm_get_Parm_Users(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Parm_Users_Result>("sp_frm_get_Parm_Users", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Service_Details_Result> sp_frm_get_Today_Service_Details(Nullable<int> customerId, Nullable<System.DateTime> startDate)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Service_Details_Result>("sp_frm_get_Today_Service_Details", customerIdParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_get_Today_Service_Items_Result> sp_frm_get_Today_Service_Items(Nullable<int> userId, Nullable<System.DateTime> startDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_get_Today_Service_Items_Result>("sp_frm_get_Today_Service_Items", userIdParameter, startDateParameter);
        }
    
        public virtual ObjectResult<sp_frm_Security_get_parm_Users_Result> sp_frm_Security_get_parm_Users(Nullable<int> userId, string pageName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_Security_get_parm_Users_Result>("sp_frm_Security_get_parm_Users", userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<string> sp_frm_Security_get_UserHomePage(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_frm_Security_get_UserHomePage", userIdParameter);
        }
    
        public virtual ObjectResult<sp_frm_Security_get_Users_Result> sp_frm_Security_get_Users(string firstName, string roleName, Nullable<short> isActive, Nullable<int> userId, string pageName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(short));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_Security_get_Users_Result>("sp_frm_Security_get_Users", firstNameParameter, roleNameParameter, isActiveParameter, userIdParameter, pageNameParameter);
        }
    
        public virtual ObjectResult<sp_frm_Security_TreeViewMenu_Result> sp_frm_Security_TreeViewMenu(Nullable<int> userId, string menu, Nullable<int> parentID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var menuParameter = menu != null ?
                new ObjectParameter("Menu", menu) :
                new ObjectParameter("Menu", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_Security_TreeViewMenu_Result>("sp_frm_Security_TreeViewMenu", userIdParameter, menuParameter, parentIDParameter);
        }
    
        public virtual int sp_Remove5000Records()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Remove5000Records");
        }
    }
}
