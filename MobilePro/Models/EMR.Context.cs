//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMR.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EMREntities : DbContext
    {
        public EMREntities()
            : base("name=EMREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<security_Pages> security_Pages { get; set; }
        public DbSet<security_RolePages> security_RolePages { get; set; }
        public DbSet<security_Roles> security_Roles { get; set; }
        public DbSet<security_UsersInRoles> security_UsersInRoles { get; set; }
        public DbSet<tbl_department> tbl_department { get; set; }
        public DbSet<webpages_Membership> webpages_Membership { get; set; }
        public DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public DbSet<webpages_Roles> webpages_Roles { get; set; }
        public DbSet<tbl_service_fee> tbl_service_fee { get; set; }
        public DbSet<tbl_inpatient> tbl_inpatient { get; set; }
        public DbSet<tbl_patient_service> tbl_patient_service { get; set; }
        public DbSet<tbl_register> tbl_register { get; set; }
    
        public virtual ObjectResult<sp_frm_Security_TreeViewMenu_Result> sp_frm_Security_TreeViewMenu(Nullable<int> userId, string menu, Nullable<int> parentID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var menuParameter = menu != null ?
                new ObjectParameter("Menu", menu) :
                new ObjectParameter("Menu", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frm_Security_TreeViewMenu_Result>("sp_frm_Security_TreeViewMenu", userIdParameter, menuParameter, parentIDParameter);
        }
    
        public virtual ObjectResult<sp_frmGetDepartment_Result> sp_frmGetDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frmGetDepartment_Result>("sp_frmGetDepartment");
        }
    
        public virtual ObjectResult<sp_frmGet_BillsList_Result> sp_frmGet_BillsList(Nullable<int> userId, string pageName, string patientId, string patientName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frmGet_BillsList_Result>("sp_frmGet_BillsList", userIdParameter, pageNameParameter, patientIdParameter, patientNameParameter);
        }
    
        public virtual ObjectResult<sp_frmGetPatient_Bills_Result> sp_frmGetPatient_Bills(Nullable<int> userId, string pageName, string patientId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frmGetPatient_Bills_Result>("sp_frmGetPatient_Bills", userIdParameter, pageNameParameter, patientIdParameter);
        }
    
        public virtual ObjectResult<string> sp_frm_Security_get_UserHomePage(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_frm_Security_get_UserHomePage", userIdParameter);
        }
    
        public virtual ObjectResult<sp_frmGetPatient_Biller_Result> sp_frmGetPatient_Biller(Nullable<int> userId, string pageName, Nullable<System.DateTime> regDateStart, Nullable<System.DateTime> regDateEnd, string departmentId, string patientId, Nullable<int> parmType)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var regDateStartParameter = regDateStart.HasValue ?
                new ObjectParameter("RegDateStart", regDateStart) :
                new ObjectParameter("RegDateStart", typeof(System.DateTime));
    
            var regDateEndParameter = regDateEnd.HasValue ?
                new ObjectParameter("RegDateEnd", regDateEnd) :
                new ObjectParameter("RegDateEnd", typeof(System.DateTime));
    
            var departmentIdParameter = departmentId != null ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var parmTypeParameter = parmType.HasValue ?
                new ObjectParameter("ParmType", parmType) :
                new ObjectParameter("ParmType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frmGetPatient_Biller_Result>("sp_frmGetPatient_Biller", userIdParameter, pageNameParameter, regDateStartParameter, regDateEndParameter, departmentIdParameter, patientIdParameter, parmTypeParameter);
        }
    
        public virtual int sp_frmAddUpdPatient(Nullable<int> userId, string pageName, string patientType, string dep_id, string patient_id, Nullable<System.DateTime> reg_date, string patient_name, Nullable<System.DateTime> birth_date, string gender, string fatherorhusbandname, string addr1, string addr2, string addr3, string phoneno, string pic_filename, string invoice_no)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var patientTypeParameter = patientType != null ?
                new ObjectParameter("PatientType", patientType) :
                new ObjectParameter("PatientType", typeof(string));
    
            var dep_idParameter = dep_id != null ?
                new ObjectParameter("dep_id", dep_id) :
                new ObjectParameter("dep_id", typeof(string));
    
            var patient_idParameter = patient_id != null ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(string));
    
            var reg_dateParameter = reg_date.HasValue ?
                new ObjectParameter("reg_date", reg_date) :
                new ObjectParameter("reg_date", typeof(System.DateTime));
    
            var patient_nameParameter = patient_name != null ?
                new ObjectParameter("patient_name", patient_name) :
                new ObjectParameter("patient_name", typeof(string));
    
            var birth_dateParameter = birth_date.HasValue ?
                new ObjectParameter("birth_date", birth_date) :
                new ObjectParameter("birth_date", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var fatherorhusbandnameParameter = fatherorhusbandname != null ?
                new ObjectParameter("fatherorhusbandname", fatherorhusbandname) :
                new ObjectParameter("fatherorhusbandname", typeof(string));
    
            var addr1Parameter = addr1 != null ?
                new ObjectParameter("addr1", addr1) :
                new ObjectParameter("addr1", typeof(string));
    
            var addr2Parameter = addr2 != null ?
                new ObjectParameter("addr2", addr2) :
                new ObjectParameter("addr2", typeof(string));
    
            var addr3Parameter = addr3 != null ?
                new ObjectParameter("addr3", addr3) :
                new ObjectParameter("addr3", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("phoneno", phoneno) :
                new ObjectParameter("phoneno", typeof(string));
    
            var pic_filenameParameter = pic_filename != null ?
                new ObjectParameter("pic_filename", pic_filename) :
                new ObjectParameter("pic_filename", typeof(string));
    
            var invoice_noParameter = invoice_no != null ?
                new ObjectParameter("invoice_no", invoice_no) :
                new ObjectParameter("invoice_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_frmAddUpdPatient", userIdParameter, pageNameParameter, patientTypeParameter, dep_idParameter, patient_idParameter, reg_dateParameter, patient_nameParameter, birth_dateParameter, genderParameter, fatherorhusbandnameParameter, addr1Parameter, addr2Parameter, addr3Parameter, phonenoParameter, pic_filenameParameter, invoice_noParameter);
        }
    
        public virtual ObjectResult<sp_frmGetPatient_Result> sp_frmGetPatient(Nullable<int> userId, string pageName, Nullable<System.DateTime> regDateStart, Nullable<System.DateTime> regDateEnd, string departmentId, string patientId, Nullable<int> parmType)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNameParameter = pageName != null ?
                new ObjectParameter("PageName", pageName) :
                new ObjectParameter("PageName", typeof(string));
    
            var regDateStartParameter = regDateStart.HasValue ?
                new ObjectParameter("RegDateStart", regDateStart) :
                new ObjectParameter("RegDateStart", typeof(System.DateTime));
    
            var regDateEndParameter = regDateEnd.HasValue ?
                new ObjectParameter("RegDateEnd", regDateEnd) :
                new ObjectParameter("RegDateEnd", typeof(System.DateTime));
    
            var departmentIdParameter = departmentId != null ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var parmTypeParameter = parmType.HasValue ?
                new ObjectParameter("ParmType", parmType) :
                new ObjectParameter("ParmType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_frmGetPatient_Result>("sp_frmGetPatient", userIdParameter, pageNameParameter, regDateStartParameter, regDateEndParameter, departmentIdParameter, patientIdParameter, parmTypeParameter);
        }
    }
}
