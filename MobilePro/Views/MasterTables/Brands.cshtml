@{
    ViewBag.Title = "Brands";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Brands List
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Brands List</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="box box-default">
            <div class="col-sm-12 callout callout-info">
                <p id="div_success">@Html.Raw(ViewBag.Message)</p>
            </div>            
            <div class="box-body">                
                <div class="row">                  

                    <div class="col-sm-2">

                        <div class="form-group">
                            <label>Search Brand</label>
                            <input type="text" id="BrandName" style="text-transform: uppercase" name="BrandName" class="form-control">
                        </div><!-- /.form group -->

                    </div>

                    <div class="col-sm-2">
                        <div class="btn-adj">
                            <button type="button" onclick="GetInfo();" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
                        </div>
                    </div>

                </div>

            </div>
        </div> <!--/.box-->
        <div id="div_error"></div>
        <div class="box box-default">
            <div class="box-footer">
                <div class="margin  hidden-xs ">               
                    <button id="addToTable" class="btn btn-default waves-effect waves-light">Add <i class="fa fa-plus"></i></button>
                </div>
            </div>
            <div class="box-body">
            <div class=" box-body table-responsive no-padding">              

                <table id="datatable-editable" class="table table-hover">
                   <thead>                                
                        <tr>
                            <th>Actions</th>
                            <th>Brand Code</th>
                            <th>Brand Name</th>
                            <th>Brand Description</th>
                            <th>Status</th>                                   
                            <th>Updated By</th>
                            <th>Updated Date</th>
                        </tr>
                   </thead>
                </table>

            </div>
            </div> <!--/.box-body-->
        </div> <!--/.box-->
    </section> <!-- /.content-->

</div><!-- /.content-wrapper -->        


<style type="text/css">
    .readonly {
    }
</style>

<script>
    jQuery(document).ready(function () {
        $.fn.dataTable.ext.errMode = 'throw';
        var actions = [
                    '<a href="#" class="hidden on-editing save-row"><i class="fa fa-save"></i></a>',
                    '<a href="#" class="hidden on-editing cancel-row"><i class="fa fa-times"></i></a>',
                    '<a href="#" class="on-default edit-row"><i class="fa fa-pencil"></i></a>'
                    //'<a href="#" class="on-default remove-row"><i class="fa fa-trash-o"></i></a>'
        ].join(' ');

        var Table1 = {
            options: {
                addButton: '#addToTable',
                table: '#datatable-editable',
                dialog: {
                    wrapper: '#dialog',
                    cancelButton: '#dialogCancel',
                    confirmButton: '#dialogConfirm',
                }
            },

            initialize: function () {
                this
                    .setVars()
                    .build()
                    .events();
            },

            setVars: function () {
                this.$table = $(this.options.table);
                this.$addButton = $(this.options.addButton);

                // dialog
                this.dialog = {};
                this.dialog.$wrapper = $(this.options.dialog.wrapper);
                this.dialog.$cancel = $(this.options.dialog.cancelButton);
                this.dialog.$confirm = $(this.options.dialog.confirmButton);

                return this;
            },

            build: function () {
                this.datatable = this.$table.DataTable({
                    aoColumns: [
                        {
                            "sWidth": "30px",
                            "render": function (o) {
                                return actions;
                            },

                            "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                                $(nTd).attr('class', 'actions')
                            },

                            "bSortable": false
                        },
                        {
                            "sWidth": "50px",
                            "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                                $(nTd).attr('class', 'key')
                            }
                        },
                        { "sWidth": "150px" },
                        { "sWidth": "200px" },
                        {
                            "sWidth": "100px",
                            "render": function (data, type, row) {
                               
                                if (type === 'display') {
                                    if (data == '1') {
                                        return '<input type="checkbox"  disabled="disabled" checked>';
                                    }
                                    else {
                                        return '<input disabled="disabled" type="checkbox">';
                                    }
                                }
                                else {
                                    if (data == '1') {
                                        return 'Active';
                                    }
                                    else {
                                        return 'Inactive';
                                    }
                                }                               
                            },                            
                            "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                                $(nTd).attr('class', 'chkbox')
                            }
                        },
                        {
                            "sWidth": "100px",
                            "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                                $(nTd).attr('class', 'readonly')
                            }
                        },
                        {
                            "sWidth": "100px",
                            "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                                $(nTd).attr('class', 'readonly')
                            }
                        }
                    ],
                    dom: 'Bfrtlip',
                    responsive: !0,
                    buttons: [
                            {
                                text: '<i class="fa fa-file-excel-o"></i>' + '&nbsp;' + 'Export Excel',
                                className: 'btn btn-primary',
                                extend: 'excel',
                                title: 'Brands List',
                                exportOptions: {
                                    columns: [1, 2, 3, 4, 5, 6],
                                    orthogonal: 'sort'
                                }                                
                            }
                    ],                       
                    "paging": true,
                    "lengthChange": false,
                    "searching": false,
                    "ordering": true,
                    "info": true,
                    "autoWidth": false,
                    //"order": [[4, "desc"]],
                    "iDisplayLength": @System.Configuration.ConfigurationManager.AppSettings["WebGridPageSize"],
                    "sAjaxSource": "@Url.Action("BrandsList", "MasterTables")",
                    "fnServerParams": function (aoData) {
                        aoData.push(
                            { "name": "BrandName", "value": $('#BrandName').val() });
                    },
                    "bProcessing": true                    
            });

        window.dt = this.datatable;
       
        return this;
    },

        events: function () {
            var _self = this;

            this.$table
                .on('click', 'a.save-row', function (e) {
                    e.preventDefault();

                    _self.rowSave($(this).closest('tr'));
                })
                .on('click', 'a.cancel-row', function (e) {
                    e.preventDefault();

                    _self.rowCancel($(this).closest('tr'));
                })
                .on('click', 'a.edit-row', function (e) {
                    e.preventDefault();
                    _self.rowEdit($(this).closest('tr'));

                })
                .on('click', 'a.remove-row', function (e) {
                    e.preventDefault();

                    var $row = $(this).closest('tr');
                    modal({
                        type: 'confirm',
                        title: 'Confirmation',
                        text: 'Are you sure you want to delete the row?',
                        callback: function (result) {
                            if (result)
                                _self.rowRemove($row);
                        }
                    });
                });

            this.$addButton.on('click', function (e) {
                e.preventDefault();
                _self.rowAdd();
            });

            this.dialog.$cancel.on('click', function (e) {
                e.preventDefault();
                $.magnificPopup.close();
            });

            return this;
        },

    // ==========================================================================================
    // ROW FUNCTIONS
    // ==========================================================================================
    rowAdd: function () {
        $('#div_error').removeClass('alert alert-danger');
        $('#div_error').html('');

        this.$addButton.attr({ 'disabled': 'disabled' });

        var actions,
            data,
            $row;

        actions = [
            '<a href="#" class="hidden on-editing save-row"><i class="fa fa-save"></i></a>',
            '<a href="#" class="hidden on-editing cancel-row"><i class="fa fa-times"></i></a>',
            '<a href="#" class="on-default edit-row"><i class="fa fa-pencil"></i></a>'
            //'<a href="#" class="on-default remove-row"><i class="fa fa-trash-o"></i></a>'
        ].join(' ');

        data = this.datatable.row.add([actions, '', '', '', '', '', '']);
        $row = this.datatable.row(data[0]).nodes().to$();

        $row
            .addClass('adding')
            .find('td:last')
            .addClass('actions');

        this.rowEdit($row);

        this.datatable.order([2, 'asc']).draw(); // always show fields
    },

    rowCancel: function ($row) {
        $('#div_error').removeClass('alert alert-danger');
        $('#div_error').html('');
               
        var _self = this,
         $actions,
         i,
         data;

        if ($row.hasClass('adding')) {
            this.rowRemove($row);
        } else {

            data = this.datatable.row($row.get(0)).data();
            this.datatable.row($row.get(0)).data(data);

            $actions = $row.find('td.actions');
            if ($actions.get(0)) {
                this.rowSetActionsDefault($row);
            }

            this.datatable.draw();
        }
    },

    rowEdit: function ($row) {
        $('#div_error').removeClass('alert alert-danger');
        $('#div_error').html('');

        var _self = this,
            data;

        data = this.datatable.row($row.get(0)).data();
        $row.children('td').each(function (i) {
            var $this = $(this);

            if ($this.hasClass('actions')) {
                _self.rowSetActionsEditing($row);
            } else {
                if (i == 1) {
                    $this.html(data[i]);
                }
                if (i == 2) {
                    $this.html('<input type="text" id="txtbrandname" style="text-transform: uppercase" class="form-control input-block" value="' + data[i] + '"/>');
                }
                if (i == 3) {
                    $this.html('<input type="text" id="txtbranddesc"  class="form-control input-block" value="' + data[i] + '"/>');
                }
                if (i == 4) {
                    if ($row.hasClass('adding')) {
                        $this.html('<input type="checkbox" id="chkstatus" name="chkstatus" value="' + data[i] + '" checked="checked" />');
                    }
                    else {
                        if (data[i] == 1) {
                            $this.html('<input type="checkbox" id="chkstatus" name="chkstatus" value="' + data[i] + '" checked="checked" />');
                        }
                        else {
                            $this.html('<input id="chkstatus" name="chkstatus" value="' + data[i] + '" type="checkbox" />');
                        }
                    }
                }
                if (i == 5) {
                    $this.html(data[i]);
                }
                if (i == 6) {
                    $this.html(data[i]);
                }                       

            }
        });
    },
            
    rowSave: function ($row) {
        var _self = this,
            $actions,
            values = [];               

        values = $row.find('td').map(function () {
            var $this = $(this);

            if ($this.hasClass('actions')) {
                _self.rowSetActionsDefault($row);
                return _self.datatable.cell(this).data();
            } else {
                if ($this.hasClass('chkbox')) {
                    return $('#chkstatus').prop('checked');
                }
                else if ($this.hasClass('readonly')) {
                    return $.trim($(this).html());
                }
                else if ($this.hasClass('key')) {
                    if ($row.hasClass('adding')) {                               
                        return $.trim($this.find('input').val());
                    }
                    else
                        return $.trim($(this).html());
                }
                else {
                    return $.trim($this.find('input').val());
                }
            }
        });
        if($row.hasClass('adding')){ // Add
            if (IsStringEmpty(values[2])) {
                $('#div_error').addClass('alert alert-danger');
                $('#div_error').html('');
                $('#div_error').prepend('<p>Brand Name is Required.');

                $row
                .addClass('adding');
                $actions = $row.find('td.actions');
                if ($actions.get(0)) {
                    this.rowSetActionsEditing($row);
                }
                   
            }
            else {
                $('#div_error').removeClass('alert alert-danger');
                $('#div_error').html('');
                   
                if (!confirm('Save Changes? Please confirm to proceed.')) {
                    $row.addClass('adding');
                    $actions = $row.find('td.actions');
                    if ($actions.get(0)) {
                        this.rowSetActionsEditing($row);
                    }

                }
                else {
                    var $this = this;
                    
                    $.ajax({
                        url: '@Url.Content("~/MasterTables/CheckExistsBrand")',
                        type: 'POST',
                        data: JSON.stringify({ BrandName: values[2] }),
                        dataType: 'json',
                        contentType: 'application/json',
                        success: function (result) {
                            if (result.success === true) {
                                $.ajax({
                                    url: '@Url.Content("~/MasterTables/SaveBrand")',
                                    type: 'POST',
                                    data: JSON.stringify({ BrandCode: values[1], BrandName: values[2], BrandDesc: values[3], Status: values[4], mode: 'Create' }),
                                    dataType: 'json',
                                    contentType: 'application/json',
                                    success: function (result) {
                                        if (result.success === true) {
                                            $('#div_success').html(result.response);                                               

                                            if ($row.hasClass('adding')) {
                                                $this.$addButton.removeAttr('disabled');
                                                $row.removeClass('adding');
                                            }

                                            $('#datatable-editable').DataTable().ajax.reload();
                                            $this.datatable.draw();
                                        }
                                        if (result.success === false) {
                                            $('#div_error').addClass('alert alert-danger');
                                            $('#div_error').html(result.response);

                                            $row.addClass('adding');
                                            $actions = $row.find('td.actions');
                                            if ($actions.get(0)) {
                                                $this.rowSetActionsEditing($row);
                                            }                                                
                                        }
                                    }
                                });
                            }
                            if (result.success === false) {
                                $('#div_error').addClass('alert alert-danger');
                                $('#div_error').html(result.response);
                                   
                                $row.addClass('adding');
                                $actions = $row.find('td.actions');
                                if ($actions.get(0)) {
                                    $this.rowSetActionsEditing($row);
                                }                                    
                            }
                        }
                    });                                            
                }
            }
        }
        else  { //Update
            $('#div_error').removeClass('alert alert-danger');
            $('#div_error').html('');
                   
            if (!confirm('Save Changes? Please confirm to proceed.')) {
                // $row.addClass('adding');
                $actions = $row.find('td.actions');
                if ($actions.get(0)) {
                    this.rowSetActionsEditing($row);
                }

            }
            else {
                var $this = this;
                $.ajax({
                    url: '@Url.Content("~/MasterTables/SaveBrand")',
                    type: 'POST',
                    data: JSON.stringify({ BrandCode: values[1], BrandName: values[2], BrandDesc: values[3], Status: values[4], mode: 'Update' }),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (result) {
                        if (result.success === true) {
                            $('#div_success').html(result.response);                                               

                            if ($row.hasClass('adding')) {
                                this.$addButton.removeAttr('disabled');
                                $row.removeClass('adding');
                            }

                            $('#datatable-editable').DataTable().ajax.reload();
                            $this.datatable.draw();
                        }
                        if (result.success === false) {
                            $('#div_error').addClass('alert alert-danger');
                            $('#div_error').html(result.response);

                            //$row.addClass('adding');
                            $actions = $row.find('td.actions');
                            if ($actions.get(0)) {
                                $this.rowSetActionsEditing($row);
                            }                                                
                        }
                    }
                });
            }
        }               
               
    },

    rowRemove: function ($row) {
        $('#div_error').removeClass('alert alert-danger');
        $('#div_error').html('');
               
        var _self = this,
          $actions,
          values = [];

        if ($row.hasClass('adding')) {
            this.$addButton.removeAttr('disabled');
            this.datatable.row($row.get(0)).remove().draw();
        }
        else {
            values = $row.find('td').map(function () {
                var $this = $(this);
                if ($this.hasClass('actions')) {
                    _self.rowSetActionsDefault($row);
                    return _self.datatable.cell(this).data();
                } else {
                    //return $.trim($this.find('input').val());
                    return $.trim($this.html());
                }
            });
                   
            $.ajax({
                url: '@Url.Content("~/MasterTables/DeleteBrand")',
                type: 'POST',
                data: JSON.stringify({ BrandCode: values[1] }),
                dataType: 'json',
                contentType: 'application/json',
                success: function (result) {
                    if (result.success === true) {
                        $('#div_success').html(result.response);

                        _self.datatable.row($row.get(0)).remove().draw();
                    }
                    if (result.success === false) {
                        $('#div_error').addClass('alert alert-danger');
                        $('#div_error').html(result.response);

                        $actions = $row.find('td.actions');
                        if ($actions.get(0)) {
                            _self.rowSetActionsDefault($row);
                        }
                    }
                }
            });
        }                           
                
    },

    rowSetActionsEditing: function ($row) {
        $row.find('.on-editing').removeClass('hidden');
        $row.find('.on-default').addClass('hidden');
    },

    rowSetActionsDefault: function ($row) {
        $row.find('.on-editing').addClass('hidden');
        $row.find('.on-default').removeClass('hidden');
    }
    };
       
    $(function () {
        Table1.initialize();
    });
    });
   

    function GetInfo() {
        $('#datatable-editable').DataTable().ajax.reload();
    }

    function IsStringEmpty(str) {
        if (str && str != '')
            return false;
        else
            return true;
    }    
</script>
